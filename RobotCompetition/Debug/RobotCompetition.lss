
RobotCompetition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b54  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011bf  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000732  00000000  00000000  00001e27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000835  00000000  00000000  00002559  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002dc  00000000  00000000  00002d90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d3  00000000  00000000  0000306c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e47  00000000  00000000  0000353f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00004386  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e0 ed       	ldi	r30, 0xD0	; 208
  3a:	fa e0       	ldi	r31, 0x0A	; 10
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	2b d3       	rcall	.+1622   	; 0x6a0 <main>
  4a:	40 c5       	rjmp	.+2688   	; 0xacc <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <USART_Init>:
		return y;
	}
	else {
		return 0;
	}
}
  4e:	90 bd       	out	0x20, r25	; 32
  50:	89 b9       	out	0x09, r24	; 9
  52:	1b b8       	out	0x0b, r1	; 11
  54:	88 e1       	ldi	r24, 0x18	; 24
  56:	8a b9       	out	0x0a, r24	; 10
  58:	86 e8       	ldi	r24, 0x86	; 134
  5a:	80 bd       	out	0x20, r24	; 32
  5c:	08 95       	ret

0000005e <initPWM>:
  5e:	2f b5       	in	r18, 0x2f	; 47
  60:	2f 70       	andi	r18, 0x0F	; 15
  62:	2f bd       	out	0x2f, r18	; 47
  64:	2e b5       	in	r18, 0x2e	; 46
  66:	2f 72       	andi	r18, 0x2F	; 47
  68:	2e bd       	out	0x2e, r18	; 46
  6a:	6f 3f       	cpi	r22, 0xFF	; 255
  6c:	71 05       	cpc	r23, r1
  6e:	69 f4       	brne	.+26     	; 0x8a <initPWM+0x2c>
  70:	2f b5       	in	r18, 0x2f	; 47
  72:	2d 7f       	andi	r18, 0xFD	; 253
  74:	2f bd       	out	0x2f, r18	; 47
  76:	2e b5       	in	r18, 0x2e	; 46
  78:	2f 7e       	andi	r18, 0xEF	; 239
  7a:	2e bd       	out	0x2e, r18	; 46
  7c:	2f b5       	in	r18, 0x2f	; 47
  7e:	21 60       	ori	r18, 0x01	; 1
  80:	2f bd       	out	0x2f, r18	; 47
  82:	2e b5       	in	r18, 0x2e	; 46
  84:	28 60       	ori	r18, 0x08	; 8
  86:	2e bd       	out	0x2e, r18	; 46
  88:	1d c0       	rjmp	.+58     	; 0xc4 <initPWM+0x66>
  8a:	6f 3f       	cpi	r22, 0xFF	; 255
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	72 07       	cpc	r23, r18
  90:	69 f4       	brne	.+26     	; 0xac <initPWM+0x4e>
  92:	2f b5       	in	r18, 0x2f	; 47
  94:	2e 7f       	andi	r18, 0xFE	; 254
  96:	2f bd       	out	0x2f, r18	; 47
  98:	2e b5       	in	r18, 0x2e	; 46
  9a:	2f 7e       	andi	r18, 0xEF	; 239
  9c:	2e bd       	out	0x2e, r18	; 46
  9e:	2f b5       	in	r18, 0x2f	; 47
  a0:	22 60       	ori	r18, 0x02	; 2
  a2:	2f bd       	out	0x2f, r18	; 47
  a4:	2e b5       	in	r18, 0x2e	; 46
  a6:	28 60       	ori	r18, 0x08	; 8
  a8:	2e bd       	out	0x2e, r18	; 46
  aa:	0c c0       	rjmp	.+24     	; 0xc4 <initPWM+0x66>
  ac:	6f 3f       	cpi	r22, 0xFF	; 255
  ae:	73 40       	sbci	r23, 0x03	; 3
  b0:	49 f4       	brne	.+18     	; 0xc4 <initPWM+0x66>
  b2:	2e b5       	in	r18, 0x2e	; 46
  b4:	2f 7e       	andi	r18, 0xEF	; 239
  b6:	2e bd       	out	0x2e, r18	; 46
  b8:	2f b5       	in	r18, 0x2f	; 47
  ba:	23 60       	ori	r18, 0x03	; 3
  bc:	2f bd       	out	0x2f, r18	; 47
  be:	2e b5       	in	r18, 0x2e	; 46
  c0:	28 60       	ori	r18, 0x08	; 8
  c2:	2e bd       	out	0x2e, r18	; 46
  c4:	81 30       	cpi	r24, 0x01	; 1
  c6:	91 05       	cpc	r25, r1
  c8:	21 f4       	brne	.+8      	; 0xd2 <initPWM+0x74>
  ca:	2e b5       	in	r18, 0x2e	; 46
  cc:	21 60       	ori	r18, 0x01	; 1
  ce:	2e bd       	out	0x2e, r18	; 46
  d0:	0e c0       	rjmp	.+28     	; 0xee <initPWM+0x90>
  d2:	88 30       	cpi	r24, 0x08	; 8
  d4:	91 05       	cpc	r25, r1
  d6:	21 f4       	brne	.+8      	; 0xe0 <initPWM+0x82>
  d8:	2e b5       	in	r18, 0x2e	; 46
  da:	22 60       	ori	r18, 0x02	; 2
  dc:	2e bd       	out	0x2e, r18	; 46
  de:	0f c0       	rjmp	.+30     	; 0xfe <initPWM+0xa0>
  e0:	80 34       	cpi	r24, 0x40	; 64
  e2:	91 05       	cpc	r25, r1
  e4:	21 f4       	brne	.+8      	; 0xee <initPWM+0x90>
  e6:	8e b5       	in	r24, 0x2e	; 46
  e8:	83 60       	ori	r24, 0x03	; 3
  ea:	8e bd       	out	0x2e, r24	; 46
  ec:	08 95       	ret
  ee:	81 15       	cp	r24, r1
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	92 07       	cpc	r25, r18
  f4:	21 f4       	brne	.+8      	; 0xfe <initPWM+0xa0>
  f6:	8e b5       	in	r24, 0x2e	; 46
  f8:	84 60       	ori	r24, 0x04	; 4
  fa:	8e bd       	out	0x2e, r24	; 46
  fc:	08 95       	ret
  fe:	81 15       	cp	r24, r1
 100:	94 40       	sbci	r25, 0x04	; 4
 102:	19 f4       	brne	.+6      	; 0x10a <initPWM+0xac>
 104:	8e b5       	in	r24, 0x2e	; 46
 106:	85 60       	ori	r24, 0x05	; 5
 108:	8e bd       	out	0x2e, r24	; 46
 10a:	08 95       	ret

0000010c <LeftWheel>:
 10c:	4f 92       	push	r4
 10e:	5f 92       	push	r5
 110:	6f 92       	push	r6
 112:	7f 92       	push	r7
 114:	8f 92       	push	r8
 116:	9f 92       	push	r9
 118:	af 92       	push	r10
 11a:	bf 92       	push	r11
 11c:	cf 92       	push	r12
 11e:	df 92       	push	r13
 120:	ef 92       	push	r14
 122:	ff 92       	push	r15
 124:	0f 93       	push	r16
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	ec 01       	movw	r28, r24
 12e:	2a 01       	movw	r4, r20
 130:	3b 01       	movw	r6, r22
 132:	a9 01       	movw	r20, r18
 134:	98 01       	movw	r18, r16
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	80 e8       	ldi	r24, 0x80	; 128
 13c:	9f e3       	ldi	r25, 0x3F	; 63
 13e:	13 d3       	rcall	.+1574   	; 0x766 <__subsf3>
 140:	4b 01       	movw	r8, r22
 142:	5c 01       	movw	r10, r24
 144:	b7 01       	movw	r22, r14
 146:	ff 0c       	add	r15, r15
 148:	88 0b       	sbc	r24, r24
 14a:	99 0b       	sbc	r25, r25
 14c:	a8 d3       	rcall	.+1872   	; 0x89e <__floatsisf>
 14e:	6b 01       	movw	r12, r22
 150:	7c 01       	movw	r14, r24
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	a9 01       	movw	r20, r18
 158:	c5 01       	movw	r24, r10
 15a:	b4 01       	movw	r22, r8
 15c:	69 d3       	rcall	.+1746   	; 0x830 <__cmpsf2>
 15e:	81 11       	cpse	r24, r1
 160:	12 c0       	rjmp	.+36     	; 0x186 <LeftWheel+0x7a>
 162:	20 97       	sbiw	r28, 0x00	; 0
 164:	81 f4       	brne	.+32     	; 0x186 <LeftWheel+0x7a>
 166:	8f b5       	in	r24, 0x2f	; 47
 168:	8f 7c       	andi	r24, 0xCF	; 207
 16a:	8f bd       	out	0x2f, r24	; 47
 16c:	96 98       	cbi	0x12, 6	; 18
 16e:	c2 9a       	sbi	0x18, 2	; 24
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	40 e8       	ldi	r20, 0x80	; 128
 176:	5f e3       	ldi	r21, 0x3F	; 63
 178:	c3 01       	movw	r24, r6
 17a:	b2 01       	movw	r22, r4
 17c:	59 d3       	rcall	.+1714   	; 0x830 <__cmpsf2>
 17e:	88 23       	and	r24, r24
 180:	09 f4       	brne	.+2      	; 0x184 <LeftWheel+0x78>
 182:	5f c0       	rjmp	.+190    	; 0x242 <LeftWheel+0x136>
 184:	13 c0       	rjmp	.+38     	; 0x1ac <LeftWheel+0xa0>
 186:	20 e0       	ldi	r18, 0x00	; 0
 188:	30 e0       	ldi	r19, 0x00	; 0
 18a:	40 e8       	ldi	r20, 0x80	; 128
 18c:	5f e3       	ldi	r21, 0x3F	; 63
 18e:	c3 01       	movw	r24, r6
 190:	b2 01       	movw	r22, r4
 192:	4e d3       	rcall	.+1692   	; 0x830 <__cmpsf2>
 194:	81 11       	cpse	r24, r1
 196:	0a c0       	rjmp	.+20     	; 0x1ac <LeftWheel+0xa0>
 198:	c1 30       	cpi	r28, 0x01	; 1
 19a:	d1 05       	cpc	r29, r1
 19c:	09 f0       	breq	.+2      	; 0x1a0 <LeftWheel+0x94>
 19e:	51 c0       	rjmp	.+162    	; 0x242 <LeftWheel+0x136>
 1a0:	8f b5       	in	r24, 0x2f	; 47
 1a2:	8f 7c       	andi	r24, 0xCF	; 207
 1a4:	8f bd       	out	0x2f, r24	; 47
 1a6:	c2 98       	cbi	0x18, 2	; 24
 1a8:	96 9a       	sbi	0x12, 6	; 18
 1aa:	4b c0       	rjmp	.+150    	; 0x242 <LeftWheel+0x136>
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	40 e8       	ldi	r20, 0x80	; 128
 1b2:	5f e3       	ldi	r21, 0x3F	; 63
 1b4:	c5 01       	movw	r24, r10
 1b6:	b4 01       	movw	r22, r8
 1b8:	3b d3       	rcall	.+1654   	; 0x830 <__cmpsf2>
 1ba:	88 23       	and	r24, r24
 1bc:	e4 f4       	brge	.+56     	; 0x1f6 <LeftWheel+0xea>
 1be:	20 e0       	ldi	r18, 0x00	; 0
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	a9 01       	movw	r20, r18
 1c4:	c5 01       	movw	r24, r10
 1c6:	b4 01       	movw	r22, r8
 1c8:	1a d4       	rcall	.+2100   	; 0x9fe <__gesf2>
 1ca:	18 16       	cp	r1, r24
 1cc:	a4 f4       	brge	.+40     	; 0x1f6 <LeftWheel+0xea>
 1ce:	20 97       	sbiw	r28, 0x00	; 0
 1d0:	91 f4       	brne	.+36     	; 0x1f6 <LeftWheel+0xea>
 1d2:	a7 01       	movw	r20, r14
 1d4:	96 01       	movw	r18, r12
 1d6:	c5 01       	movw	r24, r10
 1d8:	b4 01       	movw	r22, r8
 1da:	15 d4       	rcall	.+2090   	; 0xa06 <__mulsf3>
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	40 e0       	ldi	r20, 0x00	; 0
 1e2:	5f e3       	ldi	r21, 0x3F	; 63
 1e4:	c1 d2       	rcall	.+1410   	; 0x768 <__addsf3>
 1e6:	28 d3       	rcall	.+1616   	; 0x838 <__fixsfsi>
 1e8:	79 bd       	out	0x29, r23	; 41
 1ea:	68 bd       	out	0x28, r22	; 40
 1ec:	8f b5       	in	r24, 0x2f	; 47
 1ee:	80 63       	ori	r24, 0x30	; 48
 1f0:	8f bd       	out	0x2f, r24	; 47
 1f2:	96 98       	cbi	0x12, 6	; 18
 1f4:	c2 9a       	sbi	0x18, 2	; 24
 1f6:	20 e0       	ldi	r18, 0x00	; 0
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	40 e8       	ldi	r20, 0x80	; 128
 1fc:	5f e3       	ldi	r21, 0x3F	; 63
 1fe:	c3 01       	movw	r24, r6
 200:	b2 01       	movw	r22, r4
 202:	16 d3       	rcall	.+1580   	; 0x830 <__cmpsf2>
 204:	88 23       	and	r24, r24
 206:	7c f5       	brge	.+94     	; 0x266 <LeftWheel+0x15a>
 208:	20 e0       	ldi	r18, 0x00	; 0
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	a9 01       	movw	r20, r18
 20e:	c3 01       	movw	r24, r6
 210:	b2 01       	movw	r22, r4
 212:	f5 d3       	rcall	.+2026   	; 0x9fe <__gesf2>
 214:	18 16       	cp	r1, r24
 216:	3c f5       	brge	.+78     	; 0x266 <LeftWheel+0x15a>
 218:	21 97       	sbiw	r28, 0x01	; 1
 21a:	29 f5       	brne	.+74     	; 0x266 <LeftWheel+0x15a>
 21c:	a3 01       	movw	r20, r6
 21e:	92 01       	movw	r18, r4
 220:	c7 01       	movw	r24, r14
 222:	b6 01       	movw	r22, r12
 224:	f0 d3       	rcall	.+2016   	; 0xa06 <__mulsf3>
 226:	20 e0       	ldi	r18, 0x00	; 0
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	5f e3       	ldi	r21, 0x3F	; 63
 22e:	9c d2       	rcall	.+1336   	; 0x768 <__addsf3>
 230:	03 d3       	rcall	.+1542   	; 0x838 <__fixsfsi>
 232:	79 bd       	out	0x29, r23	; 41
 234:	68 bd       	out	0x28, r22	; 40
 236:	8f b5       	in	r24, 0x2f	; 47
 238:	80 63       	ori	r24, 0x30	; 48
 23a:	8f bd       	out	0x2f, r24	; 47
 23c:	c2 9a       	sbi	0x18, 2	; 24
 23e:	96 9a       	sbi	0x12, 6	; 18
 240:	12 c0       	rjmp	.+36     	; 0x266 <LeftWheel+0x15a>
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	40 e8       	ldi	r20, 0x80	; 128
 248:	5f e3       	ldi	r21, 0x3F	; 63
 24a:	c5 01       	movw	r24, r10
 24c:	b4 01       	movw	r22, r8
 24e:	f0 d2       	rcall	.+1504   	; 0x830 <__cmpsf2>
 250:	88 23       	and	r24, r24
 252:	4c f4       	brge	.+18     	; 0x266 <LeftWheel+0x15a>
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	a9 01       	movw	r20, r18
 25a:	c5 01       	movw	r24, r10
 25c:	b4 01       	movw	r22, r8
 25e:	cf d3       	rcall	.+1950   	; 0x9fe <__gesf2>
 260:	18 16       	cp	r1, r24
 262:	0c f4       	brge	.+2      	; 0x266 <LeftWheel+0x15a>
 264:	b4 cf       	rjmp	.-152    	; 0x1ce <LeftWheel+0xc2>
 266:	df 91       	pop	r29
 268:	cf 91       	pop	r28
 26a:	1f 91       	pop	r17
 26c:	0f 91       	pop	r16
 26e:	ff 90       	pop	r15
 270:	ef 90       	pop	r14
 272:	df 90       	pop	r13
 274:	cf 90       	pop	r12
 276:	bf 90       	pop	r11
 278:	af 90       	pop	r10
 27a:	9f 90       	pop	r9
 27c:	8f 90       	pop	r8
 27e:	7f 90       	pop	r7
 280:	6f 90       	pop	r6
 282:	5f 90       	pop	r5
 284:	4f 90       	pop	r4
 286:	08 95       	ret

00000288 <RightWheel>:
 288:	4f 92       	push	r4
 28a:	5f 92       	push	r5
 28c:	6f 92       	push	r6
 28e:	7f 92       	push	r7
 290:	8f 92       	push	r8
 292:	9f 92       	push	r9
 294:	af 92       	push	r10
 296:	bf 92       	push	r11
 298:	cf 92       	push	r12
 29a:	df 92       	push	r13
 29c:	ef 92       	push	r14
 29e:	ff 92       	push	r15
 2a0:	0f 93       	push	r16
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	ec 01       	movw	r28, r24
 2aa:	2a 01       	movw	r4, r20
 2ac:	3b 01       	movw	r6, r22
 2ae:	a9 01       	movw	r20, r18
 2b0:	98 01       	movw	r18, r16
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	70 e0       	ldi	r23, 0x00	; 0
 2b6:	80 e8       	ldi	r24, 0x80	; 128
 2b8:	9f e3       	ldi	r25, 0x3F	; 63
 2ba:	55 d2       	rcall	.+1194   	; 0x766 <__subsf3>
 2bc:	4b 01       	movw	r8, r22
 2be:	5c 01       	movw	r10, r24
 2c0:	b7 01       	movw	r22, r14
 2c2:	ff 0c       	add	r15, r15
 2c4:	88 0b       	sbc	r24, r24
 2c6:	99 0b       	sbc	r25, r25
 2c8:	ea d2       	rcall	.+1492   	; 0x89e <__floatsisf>
 2ca:	6b 01       	movw	r12, r22
 2cc:	7c 01       	movw	r14, r24
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	a9 01       	movw	r20, r18
 2d4:	c5 01       	movw	r24, r10
 2d6:	b4 01       	movw	r22, r8
 2d8:	ab d2       	rcall	.+1366   	; 0x830 <__cmpsf2>
 2da:	81 11       	cpse	r24, r1
 2dc:	12 c0       	rjmp	.+36     	; 0x302 <RightWheel+0x7a>
 2de:	20 97       	sbiw	r28, 0x00	; 0
 2e0:	81 f4       	brne	.+32     	; 0x302 <RightWheel+0x7a>
 2e2:	8f b5       	in	r24, 0x2f	; 47
 2e4:	8f 73       	andi	r24, 0x3F	; 63
 2e6:	8f bd       	out	0x2f, r24	; 47
 2e8:	97 98       	cbi	0x12, 7	; 18
 2ea:	c1 9a       	sbi	0x18, 1	; 24
 2ec:	20 e0       	ldi	r18, 0x00	; 0
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	40 e8       	ldi	r20, 0x80	; 128
 2f2:	5f e3       	ldi	r21, 0x3F	; 63
 2f4:	c3 01       	movw	r24, r6
 2f6:	b2 01       	movw	r22, r4
 2f8:	9b d2       	rcall	.+1334   	; 0x830 <__cmpsf2>
 2fa:	88 23       	and	r24, r24
 2fc:	09 f4       	brne	.+2      	; 0x300 <RightWheel+0x78>
 2fe:	5f c0       	rjmp	.+190    	; 0x3be <RightWheel+0x136>
 300:	13 c0       	rjmp	.+38     	; 0x328 <RightWheel+0xa0>
 302:	20 e0       	ldi	r18, 0x00	; 0
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	40 e8       	ldi	r20, 0x80	; 128
 308:	5f e3       	ldi	r21, 0x3F	; 63
 30a:	c3 01       	movw	r24, r6
 30c:	b2 01       	movw	r22, r4
 30e:	90 d2       	rcall	.+1312   	; 0x830 <__cmpsf2>
 310:	81 11       	cpse	r24, r1
 312:	0a c0       	rjmp	.+20     	; 0x328 <RightWheel+0xa0>
 314:	c1 30       	cpi	r28, 0x01	; 1
 316:	d1 05       	cpc	r29, r1
 318:	09 f0       	breq	.+2      	; 0x31c <RightWheel+0x94>
 31a:	51 c0       	rjmp	.+162    	; 0x3be <RightWheel+0x136>
 31c:	8f b5       	in	r24, 0x2f	; 47
 31e:	8f 73       	andi	r24, 0x3F	; 63
 320:	8f bd       	out	0x2f, r24	; 47
 322:	c1 98       	cbi	0x18, 1	; 24
 324:	97 9a       	sbi	0x12, 7	; 18
 326:	4b c0       	rjmp	.+150    	; 0x3be <RightWheel+0x136>
 328:	20 e0       	ldi	r18, 0x00	; 0
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	40 e8       	ldi	r20, 0x80	; 128
 32e:	5f e3       	ldi	r21, 0x3F	; 63
 330:	c5 01       	movw	r24, r10
 332:	b4 01       	movw	r22, r8
 334:	7d d2       	rcall	.+1274   	; 0x830 <__cmpsf2>
 336:	88 23       	and	r24, r24
 338:	e4 f4       	brge	.+56     	; 0x372 <RightWheel+0xea>
 33a:	20 e0       	ldi	r18, 0x00	; 0
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	a9 01       	movw	r20, r18
 340:	c5 01       	movw	r24, r10
 342:	b4 01       	movw	r22, r8
 344:	5c d3       	rcall	.+1720   	; 0x9fe <__gesf2>
 346:	18 16       	cp	r1, r24
 348:	a4 f4       	brge	.+40     	; 0x372 <RightWheel+0xea>
 34a:	20 97       	sbiw	r28, 0x00	; 0
 34c:	91 f4       	brne	.+36     	; 0x372 <RightWheel+0xea>
 34e:	a7 01       	movw	r20, r14
 350:	96 01       	movw	r18, r12
 352:	c5 01       	movw	r24, r10
 354:	b4 01       	movw	r22, r8
 356:	57 d3       	rcall	.+1710   	; 0xa06 <__mulsf3>
 358:	20 e0       	ldi	r18, 0x00	; 0
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	5f e3       	ldi	r21, 0x3F	; 63
 360:	03 d2       	rcall	.+1030   	; 0x768 <__addsf3>
 362:	6a d2       	rcall	.+1236   	; 0x838 <__fixsfsi>
 364:	7b bd       	out	0x2b, r23	; 43
 366:	6a bd       	out	0x2a, r22	; 42
 368:	8f b5       	in	r24, 0x2f	; 47
 36a:	80 6c       	ori	r24, 0xC0	; 192
 36c:	8f bd       	out	0x2f, r24	; 47
 36e:	97 98       	cbi	0x12, 7	; 18
 370:	c1 9a       	sbi	0x18, 1	; 24
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 e8       	ldi	r20, 0x80	; 128
 378:	5f e3       	ldi	r21, 0x3F	; 63
 37a:	c3 01       	movw	r24, r6
 37c:	b2 01       	movw	r22, r4
 37e:	58 d2       	rcall	.+1200   	; 0x830 <__cmpsf2>
 380:	88 23       	and	r24, r24
 382:	7c f5       	brge	.+94     	; 0x3e2 <RightWheel+0x15a>
 384:	20 e0       	ldi	r18, 0x00	; 0
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	a9 01       	movw	r20, r18
 38a:	c3 01       	movw	r24, r6
 38c:	b2 01       	movw	r22, r4
 38e:	37 d3       	rcall	.+1646   	; 0x9fe <__gesf2>
 390:	18 16       	cp	r1, r24
 392:	3c f5       	brge	.+78     	; 0x3e2 <RightWheel+0x15a>
 394:	21 97       	sbiw	r28, 0x01	; 1
 396:	29 f5       	brne	.+74     	; 0x3e2 <RightWheel+0x15a>
 398:	a3 01       	movw	r20, r6
 39a:	92 01       	movw	r18, r4
 39c:	c7 01       	movw	r24, r14
 39e:	b6 01       	movw	r22, r12
 3a0:	32 d3       	rcall	.+1636   	; 0xa06 <__mulsf3>
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	40 e0       	ldi	r20, 0x00	; 0
 3a8:	5f e3       	ldi	r21, 0x3F	; 63
 3aa:	de d1       	rcall	.+956    	; 0x768 <__addsf3>
 3ac:	45 d2       	rcall	.+1162   	; 0x838 <__fixsfsi>
 3ae:	7b bd       	out	0x2b, r23	; 43
 3b0:	6a bd       	out	0x2a, r22	; 42
 3b2:	8f b5       	in	r24, 0x2f	; 47
 3b4:	80 6c       	ori	r24, 0xC0	; 192
 3b6:	8f bd       	out	0x2f, r24	; 47
 3b8:	c1 9a       	sbi	0x18, 1	; 24
 3ba:	97 9a       	sbi	0x12, 7	; 18
 3bc:	12 c0       	rjmp	.+36     	; 0x3e2 <RightWheel+0x15a>
 3be:	20 e0       	ldi	r18, 0x00	; 0
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	40 e8       	ldi	r20, 0x80	; 128
 3c4:	5f e3       	ldi	r21, 0x3F	; 63
 3c6:	c5 01       	movw	r24, r10
 3c8:	b4 01       	movw	r22, r8
 3ca:	32 d2       	rcall	.+1124   	; 0x830 <__cmpsf2>
 3cc:	88 23       	and	r24, r24
 3ce:	4c f4       	brge	.+18     	; 0x3e2 <RightWheel+0x15a>
 3d0:	20 e0       	ldi	r18, 0x00	; 0
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	a9 01       	movw	r20, r18
 3d6:	c5 01       	movw	r24, r10
 3d8:	b4 01       	movw	r22, r8
 3da:	11 d3       	rcall	.+1570   	; 0x9fe <__gesf2>
 3dc:	18 16       	cp	r1, r24
 3de:	0c f4       	brge	.+2      	; 0x3e2 <RightWheel+0x15a>
 3e0:	b4 cf       	rjmp	.-152    	; 0x34a <RightWheel+0xc2>
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	ff 90       	pop	r15
 3ec:	ef 90       	pop	r14
 3ee:	df 90       	pop	r13
 3f0:	cf 90       	pop	r12
 3f2:	bf 90       	pop	r11
 3f4:	af 90       	pop	r10
 3f6:	9f 90       	pop	r9
 3f8:	8f 90       	pop	r8
 3fa:	7f 90       	pop	r7
 3fc:	6f 90       	pop	r6
 3fe:	5f 90       	pop	r5
 400:	4f 90       	pop	r4
 402:	08 95       	ret

00000404 <Drive>:
 404:	8f 92       	push	r8
 406:	9f 92       	push	r9
 408:	af 92       	push	r10
 40a:	bf 92       	push	r11
 40c:	ef 92       	push	r14
 40e:	ff 92       	push	r15
 410:	0f 93       	push	r16
 412:	1f 93       	push	r17
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	4b 01       	movw	r8, r22
 41a:	5c 01       	movw	r10, r24
 41c:	7a 01       	movw	r14, r20
 41e:	00 e0       	ldi	r16, 0x00	; 0
 420:	10 e0       	ldi	r17, 0x00	; 0
 422:	98 01       	movw	r18, r16
 424:	ab 01       	movw	r20, r22
 426:	bc 01       	movw	r22, r24
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	6f de       	rcall	.-802    	; 0x10c <LeftWheel>
 42e:	00 e0       	ldi	r16, 0x00	; 0
 430:	10 e0       	ldi	r17, 0x00	; 0
 432:	98 01       	movw	r18, r16
 434:	b5 01       	movw	r22, r10
 436:	a4 01       	movw	r20, r8
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	25 df       	rcall	.-438    	; 0x288 <RightWheel>
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	1f 91       	pop	r17
 444:	0f 91       	pop	r16
 446:	ff 90       	pop	r15
 448:	ef 90       	pop	r14
 44a:	bf 90       	pop	r11
 44c:	af 90       	pop	r10
 44e:	9f 90       	pop	r9
 450:	8f 90       	pop	r8
 452:	08 95       	ret

00000454 <Reverse>:
 454:	8f 92       	push	r8
 456:	9f 92       	push	r9
 458:	af 92       	push	r10
 45a:	bf 92       	push	r11
 45c:	ef 92       	push	r14
 45e:	ff 92       	push	r15
 460:	0f 93       	push	r16
 462:	1f 93       	push	r17
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	4b 01       	movw	r8, r22
 46a:	5c 01       	movw	r10, r24
 46c:	7a 01       	movw	r14, r20
 46e:	8b 01       	movw	r16, r22
 470:	9c 01       	movw	r18, r24
 472:	4d ec       	ldi	r20, 0xCD	; 205
 474:	5c ec       	ldi	r21, 0xCC	; 204
 476:	6c e4       	ldi	r22, 0x4C	; 76
 478:	7f e3       	ldi	r23, 0x3F	; 63
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	46 de       	rcall	.-884    	; 0x10c <LeftWheel>
 480:	95 01       	movw	r18, r10
 482:	84 01       	movw	r16, r8
 484:	4d ec       	ldi	r20, 0xCD	; 205
 486:	5c ec       	ldi	r21, 0xCC	; 204
 488:	6c e4       	ldi	r22, 0x4C	; 76
 48a:	7f e3       	ldi	r23, 0x3F	; 63
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	fb de       	rcall	.-522    	; 0x288 <RightWheel>
 492:	df 91       	pop	r29
 494:	cf 91       	pop	r28
 496:	1f 91       	pop	r17
 498:	0f 91       	pop	r16
 49a:	ff 90       	pop	r15
 49c:	ef 90       	pop	r14
 49e:	bf 90       	pop	r11
 4a0:	af 90       	pop	r10
 4a2:	9f 90       	pop	r9
 4a4:	8f 90       	pop	r8
 4a6:	08 95       	ret

000004a8 <Turn>:
 4a8:	ef 92       	push	r14
 4aa:	ff 92       	push	r15
 4ac:	0f 93       	push	r16
 4ae:	1f 93       	push	r17
 4b0:	81 30       	cpi	r24, 0x01	; 1
 4b2:	91 05       	cpc	r25, r1
 4b4:	49 f4       	brne	.+18     	; 0x4c8 <Turn+0x20>
 4b6:	79 01       	movw	r14, r18
 4b8:	00 e0       	ldi	r16, 0x00	; 0
 4ba:	10 e0       	ldi	r17, 0x00	; 0
 4bc:	20 e8       	ldi	r18, 0x80	; 128
 4be:	3f e3       	ldi	r19, 0x3F	; 63
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	23 de       	rcall	.-954    	; 0x10c <LeftWheel>
 4c6:	0a c0       	rjmp	.+20     	; 0x4dc <Turn+0x34>
 4c8:	89 2b       	or	r24, r25
 4ca:	41 f4       	brne	.+16     	; 0x4dc <Turn+0x34>
 4cc:	79 01       	movw	r14, r18
 4ce:	00 e0       	ldi	r16, 0x00	; 0
 4d0:	10 e0       	ldi	r17, 0x00	; 0
 4d2:	20 e8       	ldi	r18, 0x80	; 128
 4d4:	3f e3       	ldi	r19, 0x3F	; 63
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	d6 de       	rcall	.-596    	; 0x288 <RightWheel>
 4dc:	1f 91       	pop	r17
 4de:	0f 91       	pop	r16
 4e0:	ff 90       	pop	r15
 4e2:	ef 90       	pop	r14
 4e4:	08 95       	ret

000004e6 <StopEngines>:
 4e6:	8f b5       	in	r24, 0x2f	; 47
 4e8:	8f 73       	andi	r24, 0x3F	; 63
 4ea:	8f bd       	out	0x2f, r24	; 47
 4ec:	8f b5       	in	r24, 0x2f	; 47
 4ee:	8f 7c       	andi	r24, 0xCF	; 207
 4f0:	8f bd       	out	0x2f, r24	; 47
 4f2:	88 b3       	in	r24, 0x18	; 24
 4f4:	89 7f       	andi	r24, 0xF9	; 249
 4f6:	88 bb       	out	0x18, r24	; 24
 4f8:	82 b3       	in	r24, 0x12	; 18
 4fa:	8f 73       	andi	r24, 0x3F	; 63
 4fc:	82 bb       	out	0x12, r24	; 18
 4fe:	08 95       	ret

00000500 <SendStart>:
 500:	84 ea       	ldi	r24, 0xA4	; 164
 502:	86 bf       	out	0x36, r24	; 54
 504:	06 b6       	in	r0, 0x36	; 54
 506:	07 fe       	sbrs	r0, 7
 508:	fd cf       	rjmp	.-6      	; 0x504 <SendStart+0x4>
 50a:	08 95       	ret

0000050c <I2CRequest>:
 50c:	86 2b       	or	r24, r22
 50e:	83 b9       	out	0x03, r24	; 3
 510:	84 e8       	ldi	r24, 0x84	; 132
 512:	86 bf       	out	0x36, r24	; 54
 514:	06 b6       	in	r0, 0x36	; 54
 516:	07 fe       	sbrs	r0, 7
 518:	fd cf       	rjmp	.-6      	; 0x514 <I2CRequest+0x8>
 51a:	67 2b       	or	r22, r23
 51c:	29 f0       	breq	.+10     	; 0x528 <I2CRequest+0x1c>
 51e:	84 e8       	ldi	r24, 0x84	; 132
 520:	86 bf       	out	0x36, r24	; 54
 522:	06 b6       	in	r0, 0x36	; 54
 524:	07 fe       	sbrs	r0, 7
 526:	fd cf       	rjmp	.-6      	; 0x522 <I2CRequest+0x16>
 528:	08 95       	ret

0000052a <SendWrite>:
 52a:	83 b9       	out	0x03, r24	; 3
 52c:	84 e8       	ldi	r24, 0x84	; 132
 52e:	86 bf       	out	0x36, r24	; 54
 530:	06 b6       	in	r0, 0x36	; 54
 532:	07 fe       	sbrs	r0, 7
 534:	fd cf       	rjmp	.-6      	; 0x530 <SendWrite+0x6>
 536:	08 95       	ret

00000538 <SendStop>:
 538:	84 e9       	ldi	r24, 0x94	; 148
 53a:	86 bf       	out	0x36, r24	; 54
 53c:	06 b6       	in	r0, 0x36	; 54
 53e:	04 fc       	sbrc	r0, 4
 540:	fd cf       	rjmp	.-6      	; 0x53c <SendStop+0x4>
 542:	08 95       	ret

00000544 <ReadRequest>:
 544:	cf 93       	push	r28
 546:	c8 2f       	mov	r28, r24
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	d9 df       	rcall	.-78     	; 0x500 <SendStart>
 54e:	60 e0       	ldi	r22, 0x00	; 0
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	80 e3       	ldi	r24, 0x30	; 48
 554:	db df       	rcall	.-74     	; 0x50c <I2CRequest>
 556:	8c 2f       	mov	r24, r28
 558:	e8 df       	rcall	.-48     	; 0x52a <SendWrite>
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	d0 df       	rcall	.-96     	; 0x500 <SendStart>
 560:	61 e0       	ldi	r22, 0x01	; 1
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	80 e3       	ldi	r24, 0x30	; 48
 566:	d2 df       	rcall	.-92     	; 0x50c <I2CRequest>
 568:	e7 df       	rcall	.-50     	; 0x538 <SendStop>
 56a:	83 b1       	in	r24, 0x03	; 3
 56c:	cf 91       	pop	r28
 56e:	08 95       	ret

00000570 <WriteRequest>:
 570:	cf 93       	push	r28
 572:	df 93       	push	r29
 574:	d8 2f       	mov	r29, r24
 576:	c6 2f       	mov	r28, r22
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	c1 df       	rcall	.-126    	; 0x500 <SendStart>
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	80 e3       	ldi	r24, 0x30	; 48
 584:	c3 df       	rcall	.-122    	; 0x50c <I2CRequest>
 586:	8d 2f       	mov	r24, r29
 588:	d0 df       	rcall	.-96     	; 0x52a <SendWrite>
 58a:	8c 2f       	mov	r24, r28
 58c:	ce df       	rcall	.-100    	; 0x52a <SendWrite>
 58e:	d4 df       	rcall	.-88     	; 0x538 <SendStop>
 590:	df 91       	pop	r29
 592:	cf 91       	pop	r28
 594:	08 95       	ret

00000596 <CheckStop>:

//Checks Status of the X or Y acceleration
void CheckStop(void) {
 596:	1f 93       	push	r17
 598:	cf 93       	push	r28
 59a:	df 93       	push	r29
	char xh, yh;
	int i;

	xh = ReadRequest(OUT_X_H);
 59c:	89 e2       	ldi	r24, 0x29	; 41
 59e:	d2 df       	rcall	.-92     	; 0x544 <ReadRequest>
 5a0:	c8 2f       	mov	r28, r24

	yh = ReadRequest(OUT_Y_H);
 5a2:	8b e2       	ldi	r24, 0x2B	; 43
 5a4:	cf df       	rcall	.-98     	; 0x544 <ReadRequest>
 5a6:	18 2f       	mov	r17, r24
	
	if (((xh & 0b10000000 && !(xh & 0b11000000)) || ReadRequest(0x31) & 0b00001010)) {
 5a8:	cc 23       	and	r28, r28
 5aa:	14 f4       	brge	.+4      	; 0x5b0 <CheckStop+0x1a>
 5ac:	c0 7c       	andi	r28, 0xC0	; 192
 5ae:	69 f1       	breq	.+90     	; 0x60a <CheckStop+0x74>
 5b0:	81 e3       	ldi	r24, 0x31	; 49
 5b2:	c8 df       	rcall	.-112    	; 0x544 <ReadRequest>
 5b4:	8a 70       	andi	r24, 0x0A	; 10
 5b6:	49 f5       	brne	.+82     	; 0x60a <CheckStop+0x74>
 5b8:	2b c0       	rjmp	.+86     	; 0x610 <CheckStop+0x7a>

		for(i = 0; i < 1000; i++) {
			Reverse(dutyc_b,counterValue_PWM);
 5ba:	4f ef       	ldi	r20, 0xFF	; 255
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	60 e0       	ldi	r22, 0x00	; 0
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	80 e0       	ldi	r24, 0x00	; 0
 5c4:	9f e3       	ldi	r25, 0x3F	; 63
 5c6:	46 df       	rcall	.-372    	; 0x454 <Reverse>
 5c8:	21 97       	sbiw	r28, 0x01	; 1

	yh = ReadRequest(OUT_Y_H);
	
	if (((xh & 0b10000000 && !(xh & 0b11000000)) || ReadRequest(0x31) & 0b00001010)) {

		for(i = 0; i < 1000; i++) {
 5ca:	b9 f7       	brne	.-18     	; 0x5ba <CheckStop+0x24>
			Reverse(dutyc_b,counterValue_PWM);
		}

		if(yh & 0b11100000) {
 5cc:	10 7e       	andi	r17, 0xE0	; 224
 5ce:	71 f0       	breq	.+28     	; 0x5ec <CheckStop+0x56>
 5d0:	c0 ed       	ldi	r28, 0xD0	; 208
 5d2:	d7 e0       	ldi	r29, 0x07	; 7
			for(i = 0; i < 2000; i++) {
				Turn(1, dutyc_f, counterValue_PWM);
 5d4:	2f ef       	ldi	r18, 0xFF	; 255
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	40 e0       	ldi	r20, 0x00	; 0
 5da:	50 e0       	ldi	r21, 0x00	; 0
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	7f e3       	ldi	r23, 0x3F	; 63
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	61 df       	rcall	.-318    	; 0x4a8 <Turn>
 5e6:	21 97       	sbiw	r28, 0x01	; 1
		for(i = 0; i < 1000; i++) {
			Reverse(dutyc_b,counterValue_PWM);
		}

		if(yh & 0b11100000) {
			for(i = 0; i < 2000; i++) {
 5e8:	a9 f7       	brne	.-22     	; 0x5d4 <CheckStop+0x3e>
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <CheckStop+0x70>
 5ec:	c0 ed       	ldi	r28, 0xD0	; 208
 5ee:	d7 e0       	ldi	r29, 0x07	; 7
				Turn(1, dutyc_f, counterValue_PWM);
			}
		} else {
			for(i = 0; i < 2000; i++) {
				Turn(0, dutyc_f, counterValue_PWM);
 5f0:	2f ef       	ldi	r18, 0xFF	; 255
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	40 e0       	ldi	r20, 0x00	; 0
 5f6:	50 e0       	ldi	r21, 0x00	; 0
 5f8:	60 e0       	ldi	r22, 0x00	; 0
 5fa:	7f e3       	ldi	r23, 0x3F	; 63
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	53 df       	rcall	.-346    	; 0x4a8 <Turn>
 602:	21 97       	sbiw	r28, 0x01	; 1
		if(yh & 0b11100000) {
			for(i = 0; i < 2000; i++) {
				Turn(1, dutyc_f, counterValue_PWM);
			}
		} else {
			for(i = 0; i < 2000; i++) {
 604:	a9 f7       	brne	.-22     	; 0x5f0 <CheckStop+0x5a>
				Turn(0, dutyc_f, counterValue_PWM);
			}
		}
		StopEngines();
 606:	6f df       	rcall	.-290    	; 0x4e6 <StopEngines>
	}
}
 608:	03 c0       	rjmp	.+6      	; 0x610 <CheckStop+0x7a>
		return 0;
	}
}

//Checks Status of the X or Y acceleration
void CheckStop(void) {
 60a:	c8 ee       	ldi	r28, 0xE8	; 232
 60c:	d3 e0       	ldi	r29, 0x03	; 3
 60e:	d5 cf       	rjmp	.-86     	; 0x5ba <CheckStop+0x24>
				Turn(0, dutyc_f, counterValue_PWM);
			}
		}
		StopEngines();
	}
}
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	1f 91       	pop	r17
 616:	08 95       	ret

00000618 <AccelerationRead>:

void AccelerationRead() {
	char status;

	status = ReadRequest(STATUS_REG);
 618:	87 e2       	ldi	r24, 0x27	; 39
 61a:	94 df       	rcall	.-216    	; 0x544 <ReadRequest>
	
	//If there is a difference in the acceleration of Y or X check if stopped/bumped
	if (!((status & 0b00000011) == 0)) {
 61c:	83 70       	andi	r24, 0x03	; 3
 61e:	09 f0       	breq	.+2      	; 0x622 <AccelerationRead+0xa>
		CheckStop();
 620:	ba df       	rcall	.-140    	; 0x596 <CheckStop>
	}

	if(ReadRequest(OUT_Y_H) & 0b11110000 && ReadRequest(OUT_X_H) & 0b11110000) {
 622:	8b e2       	ldi	r24, 0x2B	; 43
 624:	8f df       	rcall	.-226    	; 0x544 <ReadRequest>
 626:	80 7f       	andi	r24, 0xF0	; 240
 628:	99 f0       	breq	.+38     	; 0x650 <AccelerationRead+0x38>
 62a:	89 e2       	ldi	r24, 0x29	; 41
 62c:	8b df       	rcall	.-234    	; 0x544 <ReadRequest>
 62e:	80 7f       	andi	r24, 0xF0	; 240
 630:	79 f0       	breq	.+30     	; 0x650 <AccelerationRead+0x38>
		StopEngines();
 632:	59 df       	rcall	.-334    	; 0x4e6 <StopEngines>
		while(ReadRequest(OUT_Y_H) & 0b11110000) {
 634:	09 c0       	rjmp	.+18     	; 0x648 <AccelerationRead+0x30>
			Turn(1, dutyc_f, counterValue_PWM);
 636:	2f ef       	ldi	r18, 0xFF	; 255
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	40 e0       	ldi	r20, 0x00	; 0
 63c:	50 e0       	ldi	r21, 0x00	; 0
 63e:	60 e0       	ldi	r22, 0x00	; 0
 640:	7f e3       	ldi	r23, 0x3F	; 63
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	30 df       	rcall	.-416    	; 0x4a8 <Turn>
		CheckStop();
	}

	if(ReadRequest(OUT_Y_H) & 0b11110000 && ReadRequest(OUT_X_H) & 0b11110000) {
		StopEngines();
		while(ReadRequest(OUT_Y_H) & 0b11110000) {
 648:	8b e2       	ldi	r24, 0x2B	; 43
 64a:	7c df       	rcall	.-264    	; 0x544 <ReadRequest>
 64c:	80 7f       	andi	r24, 0xF0	; 240
 64e:	99 f7       	brne	.-26     	; 0x636 <AccelerationRead+0x1e>
			Turn(1, dutyc_f, counterValue_PWM);
		}
	}
		
	if(ReadRequest(OUT_Y_H) & 0b01010000 && ReadRequest(OUT_X_H) & 0b11110000) {
 650:	8b e2       	ldi	r24, 0x2B	; 43
 652:	78 df       	rcall	.-272    	; 0x544 <ReadRequest>
 654:	80 75       	andi	r24, 0x50	; 80
 656:	99 f0       	breq	.+38     	; 0x67e <AccelerationRead+0x66>
 658:	89 e2       	ldi	r24, 0x29	; 41
 65a:	74 df       	rcall	.-280    	; 0x544 <ReadRequest>
 65c:	80 7f       	andi	r24, 0xF0	; 240
 65e:	79 f0       	breq	.+30     	; 0x67e <AccelerationRead+0x66>
		StopEngines();
 660:	42 df       	rcall	.-380    	; 0x4e6 <StopEngines>
		while(ReadRequest(OUT_Y_H) & 0b01010000) {
 662:	09 c0       	rjmp	.+18     	; 0x676 <AccelerationRead+0x5e>
			Turn(0, dutyc_f,counterValue_PWM);
 664:	2f ef       	ldi	r18, 0xFF	; 255
 666:	30 e0       	ldi	r19, 0x00	; 0
 668:	40 e0       	ldi	r20, 0x00	; 0
 66a:	50 e0       	ldi	r21, 0x00	; 0
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	7f e3       	ldi	r23, 0x3F	; 63
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	19 df       	rcall	.-462    	; 0x4a8 <Turn>
		}
	}
		
	if(ReadRequest(OUT_Y_H) & 0b01010000 && ReadRequest(OUT_X_H) & 0b11110000) {
		StopEngines();
		while(ReadRequest(OUT_Y_H) & 0b01010000) {
 676:	8b e2       	ldi	r24, 0x2B	; 43
 678:	65 df       	rcall	.-310    	; 0x544 <ReadRequest>
 67a:	80 75       	andi	r24, 0x50	; 80
 67c:	99 f7       	brne	.-26     	; 0x664 <AccelerationRead+0x4c>
 67e:	08 95       	ret

00000680 <LDRleft>:
//Reads what the light values are at the moment, if they are below/above certain thresholds reverse/turn, else drive



char LDRleft(void)
{	ADMUX = (1<<REFS0)|(1<<ADLAR)|(1<<MUX0)|(1<<MUX1);	// init analog V_cc with capacitor at AREF-Pin & ADC2 active
 680:	83 e6       	ldi	r24, 0x63	; 99
 682:	87 b9       	out	0x07, r24	; 7
	ADCSRA= (1<<ADEN)|(1<<ADPS1)|(1<<ADPS2)|(1<<ADSC);	// enable A/D-converter
 684:	86 ec       	ldi	r24, 0xC6	; 198
 686:	86 b9       	out	0x06, r24	; 6
	
	while((ADCSRA & (1<<ADSC)))	{	}	// wait for converter end
 688:	36 99       	sbic	0x06, 6	; 6
 68a:	fe cf       	rjmp	.-4      	; 0x688 <LDRleft+0x8>
	
	return ADCL;
 68c:	84 b1       	in	r24, 0x04	; 4
}
 68e:	08 95       	ret

00000690 <LDRright>:

char LDRright(void)
{	ADMUX = (1<<REFS0)|(1<<ADLAR)|(1<<MUX1);	// init analog V_cc with capacitor at AREF-Pin & ADC2 active
 690:	82 e6       	ldi	r24, 0x62	; 98
 692:	87 b9       	out	0x07, r24	; 7
	ADCSRA= (1<<ADEN)|(1<<ADPS1)|(1<<ADPS2)|(1<<ADSC);	// enable A/D-converter
 694:	86 ec       	ldi	r24, 0xC6	; 198
 696:	86 b9       	out	0x06, r24	; 6
		
	while((ADCSRA & (1<<ADSC)))	{	}	// wait for converter end
 698:	36 99       	sbic	0x06, 6	; 6
 69a:	fe cf       	rjmp	.-4      	; 0x698 <LDRright+0x8>
	
	return ADCL;
 69c:	84 b1       	in	r24, 0x04	; 4
}
 69e:	08 95       	ret

000006a0 <main>:
//################################ Main ############################################
//##################################################################################

int main(void)
{
	DDRB |= (1<<PB1)|(1<<PB2);
 6a0:	87 b3       	in	r24, 0x17	; 23
 6a2:	86 60       	ori	r24, 0x06	; 6
 6a4:	87 bb       	out	0x17, r24	; 23
	DDRD |= (1<<PD6)|(1<<PD7);
 6a6:	81 b3       	in	r24, 0x11	; 17
 6a8:	80 6c       	ori	r24, 0xC0	; 192
 6aa:	81 bb       	out	0x11, r24	; 17

	DDRD &= ~(1<<PD0);
 6ac:	88 98       	cbi	0x11, 0	; 17
	DDRD |= (1<<PD1);
 6ae:	89 9a       	sbi	0x11, 1	; 17
	
	DDRC |= (1<<PC1);
 6b0:	a1 9a       	sbi	0x14, 1	; 20
	DDRC &= ~((1<<PC2)|(1<<PC3));
 6b2:	84 b3       	in	r24, 0x14	; 20
 6b4:	83 7f       	andi	r24, 0xF3	; 243
 6b6:	84 bb       	out	0x14, r24	; 20
	PORTC |= (1<<PC1);
 6b8:	a9 9a       	sbi	0x15, 1	; 21

	USART_Init (103);
 6ba:	87 e6       	ldi	r24, 0x67	; 103
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	c7 dc       	rcall	.-1650   	; 0x4e <USART_Init>

	initPWM(prescaler,counterValue_PWM);
 6c0:	6f ef       	ldi	r22, 0xFF	; 255
 6c2:	70 e0       	ldi	r23, 0x00	; 0
 6c4:	88 e0       	ldi	r24, 0x08	; 8
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	ca dc       	rcall	.-1644   	; 0x5e <initPWM>

	//######################## Accelerometer config ################################
	PIND |= (1 << PD0) | (1 << PD1);
 6ca:	80 b3       	in	r24, 0x10	; 16
 6cc:	83 60       	ori	r24, 0x03	; 3
 6ce:	80 bb       	out	0x10, r24	; 16
	PINC |= (1 << PC4) | (1 << PC5);
 6d0:	83 b3       	in	r24, 0x13	; 19
 6d2:	80 63       	ori	r24, 0x30	; 48
 6d4:	83 bb       	out	0x13, r24	; 19
	TWBR = 100;
 6d6:	84 e6       	ldi	r24, 0x64	; 100
 6d8:	80 b9       	out	0x00, r24	; 0

	//CR1
	WriteRequest(0x20, 0b11000111);
 6da:	67 ec       	ldi	r22, 0xC7	; 199
 6dc:	80 e2       	ldi	r24, 0x20	; 32
 6de:	48 df       	rcall	.-368    	; 0x570 <WriteRequest>
	//CR2
	WriteRequest(0x21, 0b00001100);
 6e0:	6c e0       	ldi	r22, 0x0C	; 12
 6e2:	81 e2       	ldi	r24, 0x21	; 33
 6e4:	45 df       	rcall	.-374    	; 0x570 <WriteRequest>
	//CFG
	WriteRequest(0x30, 0b11001010);
 6e6:	6a ec       	ldi	r22, 0xCA	; 202
 6e8:	80 e3       	ldi	r24, 0x30	; 48
 6ea:	42 df       	rcall	.-380    	; 0x570 <WriteRequest>

//Reads and returns the slope of the provided axis
char FindSlope(char axis) {
	char x, y;
	if (axis == 'x') {
		x = ReadRequest(OUT_X_H);
 6ec:	89 e2       	ldi	r24, 0x29	; 41
 6ee:	2a df       	rcall	.-428    	; 0x544 <ReadRequest>
	while (1)
	{
		//######################## Example Drive ###################################

		
		Drive(dutyc_f,counterValue_PWM);
 6f0:	4f ef       	ldi	r20, 0xFF	; 255
 6f2:	50 e0       	ldi	r21, 0x00	; 0
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	70 e0       	ldi	r23, 0x00	; 0
 6f8:	80 e0       	ldi	r24, 0x00	; 0
 6fa:	9f e3       	ldi	r25, 0x3F	; 63
 6fc:	83 de       	rcall	.-762    	; 0x404 <Drive>

		AccelerationRead();
 6fe:	8c df       	rcall	.-232    	; 0x618 <AccelerationRead>

		if(LDRleft() < 0b0100001 && LDRright() < 0b01000001) {
 700:	bf df       	rcall	.-130    	; 0x680 <LDRleft>
 702:	81 32       	cpi	r24, 0x21	; 33
 704:	80 f4       	brcc	.+32     	; 0x726 <main+0x86>
 706:	c4 df       	rcall	.-120    	; 0x690 <LDRright>
 708:	81 34       	cpi	r24, 0x41	; 65
 70a:	68 f4       	brcc	.+26     	; 0x726 <main+0x86>
 70c:	c8 e8       	ldi	r28, 0x88	; 136
 70e:	d3 e1       	ldi	r29, 0x13	; 19
			for(i = 0; i < 5000; i++) {
				Drive(dutyc_f, counterValue_PWM);
 710:	4f ef       	ldi	r20, 0xFF	; 255
 712:	50 e0       	ldi	r21, 0x00	; 0
 714:	60 e0       	ldi	r22, 0x00	; 0
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	80 e0       	ldi	r24, 0x00	; 0
 71a:	9f e3       	ldi	r25, 0x3F	; 63
 71c:	73 de       	rcall	.-794    	; 0x404 <Drive>
 71e:	21 97       	sbiw	r28, 0x01	; 1
		Drive(dutyc_f,counterValue_PWM);

		AccelerationRead();

		if(LDRleft() < 0b0100001 && LDRright() < 0b01000001) {
			for(i = 0; i < 5000; i++) {
 720:	b9 f7       	brne	.-18     	; 0x710 <main+0x70>
				Drive(dutyc_f, counterValue_PWM);
			}
			while(1) {
				StopEngines();
 722:	e1 de       	rcall	.-574    	; 0x4e6 <StopEngines>
 724:	fe cf       	rjmp	.-4      	; 0x722 <main+0x82>
			}
		} else if (LDRleft() < 0b01000001) {
 726:	ac df       	rcall	.-168    	; 0x680 <LDRleft>
 728:	81 34       	cpi	r24, 0x41	; 65
 72a:	58 f4       	brcc	.+22     	; 0x742 <main+0xa2>
			StopEngines();
 72c:	dc de       	rcall	.-584    	; 0x4e6 <StopEngines>
			//Reverse(dutyc_b, counterValue_PWM);
			Turn(1, dutyc_f, counterValue_PWM);
 72e:	2f ef       	ldi	r18, 0xFF	; 255
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	40 e0       	ldi	r20, 0x00	; 0
 734:	50 e0       	ldi	r21, 0x00	; 0
 736:	60 e0       	ldi	r22, 0x00	; 0
 738:	7f e3       	ldi	r23, 0x3F	; 63
 73a:	81 e0       	ldi	r24, 0x01	; 1
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	b4 de       	rcall	.-664    	; 0x4a8 <Turn>
 740:	0d c0       	rjmp	.+26     	; 0x75c <main+0xbc>
		} else if (LDRright() < 0b01000001) {
 742:	a6 df       	rcall	.-180    	; 0x690 <LDRright>
 744:	81 34       	cpi	r24, 0x41	; 65
 746:	50 f4       	brcc	.+20     	; 0x75c <main+0xbc>
			StopEngines();
 748:	ce de       	rcall	.-612    	; 0x4e6 <StopEngines>
			//Reverse(dutyc_b, counterValue_PWM);
			Turn(0, dutyc_f, counterValue_PWM);
 74a:	2f ef       	ldi	r18, 0xFF	; 255
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	40 e0       	ldi	r20, 0x00	; 0
 750:	50 e0       	ldi	r21, 0x00	; 0
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	7f e3       	ldi	r23, 0x3F	; 63
 756:	80 e0       	ldi	r24, 0x00	; 0
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	a6 de       	rcall	.-692    	; 0x4a8 <Turn>
 75c:	80 ed       	ldi	r24, 0xD0	; 208
 75e:	97 e0       	ldi	r25, 0x07	; 7
 760:	01 97       	sbiw	r24, 0x01	; 1
		}
		
		for(i = 0; i < 2000; i++);
 762:	f1 f7       	brne	.-4      	; 0x760 <main+0xc0>
 764:	c5 cf       	rjmp	.-118    	; 0x6f0 <main+0x50>

00000766 <__subsf3>:
 766:	50 58       	subi	r21, 0x80	; 128

00000768 <__addsf3>:
 768:	bb 27       	eor	r27, r27
 76a:	aa 27       	eor	r26, r26
 76c:	0e d0       	rcall	.+28     	; 0x78a <__addsf3x>
 76e:	0d c1       	rjmp	.+538    	; 0x98a <__fp_round>
 770:	fe d0       	rcall	.+508    	; 0x96e <__fp_pscA>
 772:	30 f0       	brcs	.+12     	; 0x780 <__addsf3+0x18>
 774:	03 d1       	rcall	.+518    	; 0x97c <__fp_pscB>
 776:	20 f0       	brcs	.+8      	; 0x780 <__addsf3+0x18>
 778:	31 f4       	brne	.+12     	; 0x786 <__addsf3+0x1e>
 77a:	9f 3f       	cpi	r25, 0xFF	; 255
 77c:	11 f4       	brne	.+4      	; 0x782 <__addsf3+0x1a>
 77e:	1e f4       	brtc	.+6      	; 0x786 <__addsf3+0x1e>
 780:	f3 c0       	rjmp	.+486    	; 0x968 <__fp_nan>
 782:	0e f4       	brtc	.+2      	; 0x786 <__addsf3+0x1e>
 784:	e0 95       	com	r30
 786:	e7 fb       	bst	r30, 7
 788:	e9 c0       	rjmp	.+466    	; 0x95c <__fp_inf>

0000078a <__addsf3x>:
 78a:	e9 2f       	mov	r30, r25
 78c:	0f d1       	rcall	.+542    	; 0x9ac <__fp_split3>
 78e:	80 f3       	brcs	.-32     	; 0x770 <__addsf3+0x8>
 790:	ba 17       	cp	r27, r26
 792:	62 07       	cpc	r22, r18
 794:	73 07       	cpc	r23, r19
 796:	84 07       	cpc	r24, r20
 798:	95 07       	cpc	r25, r21
 79a:	18 f0       	brcs	.+6      	; 0x7a2 <__addsf3x+0x18>
 79c:	71 f4       	brne	.+28     	; 0x7ba <__addsf3x+0x30>
 79e:	9e f5       	brtc	.+102    	; 0x806 <__addsf3x+0x7c>
 7a0:	27 c1       	rjmp	.+590    	; 0x9f0 <__fp_zero>
 7a2:	0e f4       	brtc	.+2      	; 0x7a6 <__addsf3x+0x1c>
 7a4:	e0 95       	com	r30
 7a6:	0b 2e       	mov	r0, r27
 7a8:	ba 2f       	mov	r27, r26
 7aa:	a0 2d       	mov	r26, r0
 7ac:	0b 01       	movw	r0, r22
 7ae:	b9 01       	movw	r22, r18
 7b0:	90 01       	movw	r18, r0
 7b2:	0c 01       	movw	r0, r24
 7b4:	ca 01       	movw	r24, r20
 7b6:	a0 01       	movw	r20, r0
 7b8:	11 24       	eor	r1, r1
 7ba:	ff 27       	eor	r31, r31
 7bc:	59 1b       	sub	r21, r25
 7be:	99 f0       	breq	.+38     	; 0x7e6 <__addsf3x+0x5c>
 7c0:	59 3f       	cpi	r21, 0xF9	; 249
 7c2:	50 f4       	brcc	.+20     	; 0x7d8 <__addsf3x+0x4e>
 7c4:	50 3e       	cpi	r21, 0xE0	; 224
 7c6:	68 f1       	brcs	.+90     	; 0x822 <__addsf3x+0x98>
 7c8:	1a 16       	cp	r1, r26
 7ca:	f0 40       	sbci	r31, 0x00	; 0
 7cc:	a2 2f       	mov	r26, r18
 7ce:	23 2f       	mov	r18, r19
 7d0:	34 2f       	mov	r19, r20
 7d2:	44 27       	eor	r20, r20
 7d4:	58 5f       	subi	r21, 0xF8	; 248
 7d6:	f3 cf       	rjmp	.-26     	; 0x7be <__addsf3x+0x34>
 7d8:	46 95       	lsr	r20
 7da:	37 95       	ror	r19
 7dc:	27 95       	ror	r18
 7de:	a7 95       	ror	r26
 7e0:	f0 40       	sbci	r31, 0x00	; 0
 7e2:	53 95       	inc	r21
 7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__addsf3x+0x4e>
 7e6:	7e f4       	brtc	.+30     	; 0x806 <__addsf3x+0x7c>
 7e8:	1f 16       	cp	r1, r31
 7ea:	ba 0b       	sbc	r27, r26
 7ec:	62 0b       	sbc	r22, r18
 7ee:	73 0b       	sbc	r23, r19
 7f0:	84 0b       	sbc	r24, r20
 7f2:	ba f0       	brmi	.+46     	; 0x822 <__addsf3x+0x98>
 7f4:	91 50       	subi	r25, 0x01	; 1
 7f6:	a1 f0       	breq	.+40     	; 0x820 <__addsf3x+0x96>
 7f8:	ff 0f       	add	r31, r31
 7fa:	bb 1f       	adc	r27, r27
 7fc:	66 1f       	adc	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	88 1f       	adc	r24, r24
 802:	c2 f7       	brpl	.-16     	; 0x7f4 <__addsf3x+0x6a>
 804:	0e c0       	rjmp	.+28     	; 0x822 <__addsf3x+0x98>
 806:	ba 0f       	add	r27, r26
 808:	62 1f       	adc	r22, r18
 80a:	73 1f       	adc	r23, r19
 80c:	84 1f       	adc	r24, r20
 80e:	48 f4       	brcc	.+18     	; 0x822 <__addsf3x+0x98>
 810:	87 95       	ror	r24
 812:	77 95       	ror	r23
 814:	67 95       	ror	r22
 816:	b7 95       	ror	r27
 818:	f7 95       	ror	r31
 81a:	9e 3f       	cpi	r25, 0xFE	; 254
 81c:	08 f0       	brcs	.+2      	; 0x820 <__addsf3x+0x96>
 81e:	b3 cf       	rjmp	.-154    	; 0x786 <__addsf3+0x1e>
 820:	93 95       	inc	r25
 822:	88 0f       	add	r24, r24
 824:	08 f0       	brcs	.+2      	; 0x828 <__addsf3x+0x9e>
 826:	99 27       	eor	r25, r25
 828:	ee 0f       	add	r30, r30
 82a:	97 95       	ror	r25
 82c:	87 95       	ror	r24
 82e:	08 95       	ret

00000830 <__cmpsf2>:
 830:	71 d0       	rcall	.+226    	; 0x914 <__fp_cmp>
 832:	08 f4       	brcc	.+2      	; 0x836 <__cmpsf2+0x6>
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	08 95       	ret

00000838 <__fixsfsi>:
 838:	04 d0       	rcall	.+8      	; 0x842 <__fixunssfsi>
 83a:	68 94       	set
 83c:	b1 11       	cpse	r27, r1
 83e:	d9 c0       	rjmp	.+434    	; 0x9f2 <__fp_szero>
 840:	08 95       	ret

00000842 <__fixunssfsi>:
 842:	bc d0       	rcall	.+376    	; 0x9bc <__fp_splitA>
 844:	88 f0       	brcs	.+34     	; 0x868 <__fixunssfsi+0x26>
 846:	9f 57       	subi	r25, 0x7F	; 127
 848:	90 f0       	brcs	.+36     	; 0x86e <__fixunssfsi+0x2c>
 84a:	b9 2f       	mov	r27, r25
 84c:	99 27       	eor	r25, r25
 84e:	b7 51       	subi	r27, 0x17	; 23
 850:	a0 f0       	brcs	.+40     	; 0x87a <__fixunssfsi+0x38>
 852:	d1 f0       	breq	.+52     	; 0x888 <__fixunssfsi+0x46>
 854:	66 0f       	add	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	99 1f       	adc	r25, r25
 85c:	1a f0       	brmi	.+6      	; 0x864 <__fixunssfsi+0x22>
 85e:	ba 95       	dec	r27
 860:	c9 f7       	brne	.-14     	; 0x854 <__fixunssfsi+0x12>
 862:	12 c0       	rjmp	.+36     	; 0x888 <__fixunssfsi+0x46>
 864:	b1 30       	cpi	r27, 0x01	; 1
 866:	81 f0       	breq	.+32     	; 0x888 <__fixunssfsi+0x46>
 868:	c3 d0       	rcall	.+390    	; 0x9f0 <__fp_zero>
 86a:	b1 e0       	ldi	r27, 0x01	; 1
 86c:	08 95       	ret
 86e:	c0 c0       	rjmp	.+384    	; 0x9f0 <__fp_zero>
 870:	67 2f       	mov	r22, r23
 872:	78 2f       	mov	r23, r24
 874:	88 27       	eor	r24, r24
 876:	b8 5f       	subi	r27, 0xF8	; 248
 878:	39 f0       	breq	.+14     	; 0x888 <__fixunssfsi+0x46>
 87a:	b9 3f       	cpi	r27, 0xF9	; 249
 87c:	cc f3       	brlt	.-14     	; 0x870 <__fixunssfsi+0x2e>
 87e:	86 95       	lsr	r24
 880:	77 95       	ror	r23
 882:	67 95       	ror	r22
 884:	b3 95       	inc	r27
 886:	d9 f7       	brne	.-10     	; 0x87e <__fixunssfsi+0x3c>
 888:	3e f4       	brtc	.+14     	; 0x898 <__fixunssfsi+0x56>
 88a:	90 95       	com	r25
 88c:	80 95       	com	r24
 88e:	70 95       	com	r23
 890:	61 95       	neg	r22
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	8f 4f       	sbci	r24, 0xFF	; 255
 896:	9f 4f       	sbci	r25, 0xFF	; 255
 898:	08 95       	ret

0000089a <__floatunsisf>:
 89a:	e8 94       	clt
 89c:	09 c0       	rjmp	.+18     	; 0x8b0 <__floatsisf+0x12>

0000089e <__floatsisf>:
 89e:	97 fb       	bst	r25, 7
 8a0:	3e f4       	brtc	.+14     	; 0x8b0 <__floatsisf+0x12>
 8a2:	90 95       	com	r25
 8a4:	80 95       	com	r24
 8a6:	70 95       	com	r23
 8a8:	61 95       	neg	r22
 8aa:	7f 4f       	sbci	r23, 0xFF	; 255
 8ac:	8f 4f       	sbci	r24, 0xFF	; 255
 8ae:	9f 4f       	sbci	r25, 0xFF	; 255
 8b0:	99 23       	and	r25, r25
 8b2:	a9 f0       	breq	.+42     	; 0x8de <__floatsisf+0x40>
 8b4:	f9 2f       	mov	r31, r25
 8b6:	96 e9       	ldi	r25, 0x96	; 150
 8b8:	bb 27       	eor	r27, r27
 8ba:	93 95       	inc	r25
 8bc:	f6 95       	lsr	r31
 8be:	87 95       	ror	r24
 8c0:	77 95       	ror	r23
 8c2:	67 95       	ror	r22
 8c4:	b7 95       	ror	r27
 8c6:	f1 11       	cpse	r31, r1
 8c8:	f8 cf       	rjmp	.-16     	; 0x8ba <__floatsisf+0x1c>
 8ca:	fa f4       	brpl	.+62     	; 0x90a <__floatsisf+0x6c>
 8cc:	bb 0f       	add	r27, r27
 8ce:	11 f4       	brne	.+4      	; 0x8d4 <__floatsisf+0x36>
 8d0:	60 ff       	sbrs	r22, 0
 8d2:	1b c0       	rjmp	.+54     	; 0x90a <__floatsisf+0x6c>
 8d4:	6f 5f       	subi	r22, 0xFF	; 255
 8d6:	7f 4f       	sbci	r23, 0xFF	; 255
 8d8:	8f 4f       	sbci	r24, 0xFF	; 255
 8da:	9f 4f       	sbci	r25, 0xFF	; 255
 8dc:	16 c0       	rjmp	.+44     	; 0x90a <__floatsisf+0x6c>
 8de:	88 23       	and	r24, r24
 8e0:	11 f0       	breq	.+4      	; 0x8e6 <__floatsisf+0x48>
 8e2:	96 e9       	ldi	r25, 0x96	; 150
 8e4:	11 c0       	rjmp	.+34     	; 0x908 <__floatsisf+0x6a>
 8e6:	77 23       	and	r23, r23
 8e8:	21 f0       	breq	.+8      	; 0x8f2 <__floatsisf+0x54>
 8ea:	9e e8       	ldi	r25, 0x8E	; 142
 8ec:	87 2f       	mov	r24, r23
 8ee:	76 2f       	mov	r23, r22
 8f0:	05 c0       	rjmp	.+10     	; 0x8fc <__floatsisf+0x5e>
 8f2:	66 23       	and	r22, r22
 8f4:	71 f0       	breq	.+28     	; 0x912 <__floatsisf+0x74>
 8f6:	96 e8       	ldi	r25, 0x86	; 134
 8f8:	86 2f       	mov	r24, r22
 8fa:	70 e0       	ldi	r23, 0x00	; 0
 8fc:	60 e0       	ldi	r22, 0x00	; 0
 8fe:	2a f0       	brmi	.+10     	; 0x90a <__floatsisf+0x6c>
 900:	9a 95       	dec	r25
 902:	66 0f       	add	r22, r22
 904:	77 1f       	adc	r23, r23
 906:	88 1f       	adc	r24, r24
 908:	da f7       	brpl	.-10     	; 0x900 <__floatsisf+0x62>
 90a:	88 0f       	add	r24, r24
 90c:	96 95       	lsr	r25
 90e:	87 95       	ror	r24
 910:	97 f9       	bld	r25, 7
 912:	08 95       	ret

00000914 <__fp_cmp>:
 914:	99 0f       	add	r25, r25
 916:	00 08       	sbc	r0, r0
 918:	55 0f       	add	r21, r21
 91a:	aa 0b       	sbc	r26, r26
 91c:	e0 e8       	ldi	r30, 0x80	; 128
 91e:	fe ef       	ldi	r31, 0xFE	; 254
 920:	16 16       	cp	r1, r22
 922:	17 06       	cpc	r1, r23
 924:	e8 07       	cpc	r30, r24
 926:	f9 07       	cpc	r31, r25
 928:	c0 f0       	brcs	.+48     	; 0x95a <__fp_cmp+0x46>
 92a:	12 16       	cp	r1, r18
 92c:	13 06       	cpc	r1, r19
 92e:	e4 07       	cpc	r30, r20
 930:	f5 07       	cpc	r31, r21
 932:	98 f0       	brcs	.+38     	; 0x95a <__fp_cmp+0x46>
 934:	62 1b       	sub	r22, r18
 936:	73 0b       	sbc	r23, r19
 938:	84 0b       	sbc	r24, r20
 93a:	95 0b       	sbc	r25, r21
 93c:	39 f4       	brne	.+14     	; 0x94c <__fp_cmp+0x38>
 93e:	0a 26       	eor	r0, r26
 940:	61 f0       	breq	.+24     	; 0x95a <__fp_cmp+0x46>
 942:	23 2b       	or	r18, r19
 944:	24 2b       	or	r18, r20
 946:	25 2b       	or	r18, r21
 948:	21 f4       	brne	.+8      	; 0x952 <__fp_cmp+0x3e>
 94a:	08 95       	ret
 94c:	0a 26       	eor	r0, r26
 94e:	09 f4       	brne	.+2      	; 0x952 <__fp_cmp+0x3e>
 950:	a1 40       	sbci	r26, 0x01	; 1
 952:	a6 95       	lsr	r26
 954:	8f ef       	ldi	r24, 0xFF	; 255
 956:	81 1d       	adc	r24, r1
 958:	81 1d       	adc	r24, r1
 95a:	08 95       	ret

0000095c <__fp_inf>:
 95c:	97 f9       	bld	r25, 7
 95e:	9f 67       	ori	r25, 0x7F	; 127
 960:	80 e8       	ldi	r24, 0x80	; 128
 962:	70 e0       	ldi	r23, 0x00	; 0
 964:	60 e0       	ldi	r22, 0x00	; 0
 966:	08 95       	ret

00000968 <__fp_nan>:
 968:	9f ef       	ldi	r25, 0xFF	; 255
 96a:	80 ec       	ldi	r24, 0xC0	; 192
 96c:	08 95       	ret

0000096e <__fp_pscA>:
 96e:	00 24       	eor	r0, r0
 970:	0a 94       	dec	r0
 972:	16 16       	cp	r1, r22
 974:	17 06       	cpc	r1, r23
 976:	18 06       	cpc	r1, r24
 978:	09 06       	cpc	r0, r25
 97a:	08 95       	ret

0000097c <__fp_pscB>:
 97c:	00 24       	eor	r0, r0
 97e:	0a 94       	dec	r0
 980:	12 16       	cp	r1, r18
 982:	13 06       	cpc	r1, r19
 984:	14 06       	cpc	r1, r20
 986:	05 06       	cpc	r0, r21
 988:	08 95       	ret

0000098a <__fp_round>:
 98a:	09 2e       	mov	r0, r25
 98c:	03 94       	inc	r0
 98e:	00 0c       	add	r0, r0
 990:	11 f4       	brne	.+4      	; 0x996 <__fp_round+0xc>
 992:	88 23       	and	r24, r24
 994:	52 f0       	brmi	.+20     	; 0x9aa <__fp_round+0x20>
 996:	bb 0f       	add	r27, r27
 998:	40 f4       	brcc	.+16     	; 0x9aa <__fp_round+0x20>
 99a:	bf 2b       	or	r27, r31
 99c:	11 f4       	brne	.+4      	; 0x9a2 <__fp_round+0x18>
 99e:	60 ff       	sbrs	r22, 0
 9a0:	04 c0       	rjmp	.+8      	; 0x9aa <__fp_round+0x20>
 9a2:	6f 5f       	subi	r22, 0xFF	; 255
 9a4:	7f 4f       	sbci	r23, 0xFF	; 255
 9a6:	8f 4f       	sbci	r24, 0xFF	; 255
 9a8:	9f 4f       	sbci	r25, 0xFF	; 255
 9aa:	08 95       	ret

000009ac <__fp_split3>:
 9ac:	57 fd       	sbrc	r21, 7
 9ae:	90 58       	subi	r25, 0x80	; 128
 9b0:	44 0f       	add	r20, r20
 9b2:	55 1f       	adc	r21, r21
 9b4:	59 f0       	breq	.+22     	; 0x9cc <__fp_splitA+0x10>
 9b6:	5f 3f       	cpi	r21, 0xFF	; 255
 9b8:	71 f0       	breq	.+28     	; 0x9d6 <__fp_splitA+0x1a>
 9ba:	47 95       	ror	r20

000009bc <__fp_splitA>:
 9bc:	88 0f       	add	r24, r24
 9be:	97 fb       	bst	r25, 7
 9c0:	99 1f       	adc	r25, r25
 9c2:	61 f0       	breq	.+24     	; 0x9dc <__fp_splitA+0x20>
 9c4:	9f 3f       	cpi	r25, 0xFF	; 255
 9c6:	79 f0       	breq	.+30     	; 0x9e6 <__fp_splitA+0x2a>
 9c8:	87 95       	ror	r24
 9ca:	08 95       	ret
 9cc:	12 16       	cp	r1, r18
 9ce:	13 06       	cpc	r1, r19
 9d0:	14 06       	cpc	r1, r20
 9d2:	55 1f       	adc	r21, r21
 9d4:	f2 cf       	rjmp	.-28     	; 0x9ba <__fp_split3+0xe>
 9d6:	46 95       	lsr	r20
 9d8:	f1 df       	rcall	.-30     	; 0x9bc <__fp_splitA>
 9da:	08 c0       	rjmp	.+16     	; 0x9ec <__fp_splitA+0x30>
 9dc:	16 16       	cp	r1, r22
 9de:	17 06       	cpc	r1, r23
 9e0:	18 06       	cpc	r1, r24
 9e2:	99 1f       	adc	r25, r25
 9e4:	f1 cf       	rjmp	.-30     	; 0x9c8 <__fp_splitA+0xc>
 9e6:	86 95       	lsr	r24
 9e8:	71 05       	cpc	r23, r1
 9ea:	61 05       	cpc	r22, r1
 9ec:	08 94       	sec
 9ee:	08 95       	ret

000009f0 <__fp_zero>:
 9f0:	e8 94       	clt

000009f2 <__fp_szero>:
 9f2:	bb 27       	eor	r27, r27
 9f4:	66 27       	eor	r22, r22
 9f6:	77 27       	eor	r23, r23
 9f8:	cb 01       	movw	r24, r22
 9fa:	97 f9       	bld	r25, 7
 9fc:	08 95       	ret

000009fe <__gesf2>:
 9fe:	8a df       	rcall	.-236    	; 0x914 <__fp_cmp>
 a00:	08 f4       	brcc	.+2      	; 0xa04 <__gesf2+0x6>
 a02:	8f ef       	ldi	r24, 0xFF	; 255
 a04:	08 95       	ret

00000a06 <__mulsf3>:
 a06:	0b d0       	rcall	.+22     	; 0xa1e <__mulsf3x>
 a08:	c0 cf       	rjmp	.-128    	; 0x98a <__fp_round>
 a0a:	b1 df       	rcall	.-158    	; 0x96e <__fp_pscA>
 a0c:	28 f0       	brcs	.+10     	; 0xa18 <__mulsf3+0x12>
 a0e:	b6 df       	rcall	.-148    	; 0x97c <__fp_pscB>
 a10:	18 f0       	brcs	.+6      	; 0xa18 <__mulsf3+0x12>
 a12:	95 23       	and	r25, r21
 a14:	09 f0       	breq	.+2      	; 0xa18 <__mulsf3+0x12>
 a16:	a2 cf       	rjmp	.-188    	; 0x95c <__fp_inf>
 a18:	a7 cf       	rjmp	.-178    	; 0x968 <__fp_nan>
 a1a:	11 24       	eor	r1, r1
 a1c:	ea cf       	rjmp	.-44     	; 0x9f2 <__fp_szero>

00000a1e <__mulsf3x>:
 a1e:	c6 df       	rcall	.-116    	; 0x9ac <__fp_split3>
 a20:	a0 f3       	brcs	.-24     	; 0xa0a <__mulsf3+0x4>

00000a22 <__mulsf3_pse>:
 a22:	95 9f       	mul	r25, r21
 a24:	d1 f3       	breq	.-12     	; 0xa1a <__mulsf3+0x14>
 a26:	95 0f       	add	r25, r21
 a28:	50 e0       	ldi	r21, 0x00	; 0
 a2a:	55 1f       	adc	r21, r21
 a2c:	62 9f       	mul	r22, r18
 a2e:	f0 01       	movw	r30, r0
 a30:	72 9f       	mul	r23, r18
 a32:	bb 27       	eor	r27, r27
 a34:	f0 0d       	add	r31, r0
 a36:	b1 1d       	adc	r27, r1
 a38:	63 9f       	mul	r22, r19
 a3a:	aa 27       	eor	r26, r26
 a3c:	f0 0d       	add	r31, r0
 a3e:	b1 1d       	adc	r27, r1
 a40:	aa 1f       	adc	r26, r26
 a42:	64 9f       	mul	r22, r20
 a44:	66 27       	eor	r22, r22
 a46:	b0 0d       	add	r27, r0
 a48:	a1 1d       	adc	r26, r1
 a4a:	66 1f       	adc	r22, r22
 a4c:	82 9f       	mul	r24, r18
 a4e:	22 27       	eor	r18, r18
 a50:	b0 0d       	add	r27, r0
 a52:	a1 1d       	adc	r26, r1
 a54:	62 1f       	adc	r22, r18
 a56:	73 9f       	mul	r23, r19
 a58:	b0 0d       	add	r27, r0
 a5a:	a1 1d       	adc	r26, r1
 a5c:	62 1f       	adc	r22, r18
 a5e:	83 9f       	mul	r24, r19
 a60:	a0 0d       	add	r26, r0
 a62:	61 1d       	adc	r22, r1
 a64:	22 1f       	adc	r18, r18
 a66:	74 9f       	mul	r23, r20
 a68:	33 27       	eor	r19, r19
 a6a:	a0 0d       	add	r26, r0
 a6c:	61 1d       	adc	r22, r1
 a6e:	23 1f       	adc	r18, r19
 a70:	84 9f       	mul	r24, r20
 a72:	60 0d       	add	r22, r0
 a74:	21 1d       	adc	r18, r1
 a76:	82 2f       	mov	r24, r18
 a78:	76 2f       	mov	r23, r22
 a7a:	6a 2f       	mov	r22, r26
 a7c:	11 24       	eor	r1, r1
 a7e:	9f 57       	subi	r25, 0x7F	; 127
 a80:	50 40       	sbci	r21, 0x00	; 0
 a82:	8a f0       	brmi	.+34     	; 0xaa6 <__mulsf3_pse+0x84>
 a84:	e1 f0       	breq	.+56     	; 0xabe <__mulsf3_pse+0x9c>
 a86:	88 23       	and	r24, r24
 a88:	4a f0       	brmi	.+18     	; 0xa9c <__mulsf3_pse+0x7a>
 a8a:	ee 0f       	add	r30, r30
 a8c:	ff 1f       	adc	r31, r31
 a8e:	bb 1f       	adc	r27, r27
 a90:	66 1f       	adc	r22, r22
 a92:	77 1f       	adc	r23, r23
 a94:	88 1f       	adc	r24, r24
 a96:	91 50       	subi	r25, 0x01	; 1
 a98:	50 40       	sbci	r21, 0x00	; 0
 a9a:	a9 f7       	brne	.-22     	; 0xa86 <__mulsf3_pse+0x64>
 a9c:	9e 3f       	cpi	r25, 0xFE	; 254
 a9e:	51 05       	cpc	r21, r1
 aa0:	70 f0       	brcs	.+28     	; 0xabe <__mulsf3_pse+0x9c>
 aa2:	5c cf       	rjmp	.-328    	; 0x95c <__fp_inf>
 aa4:	a6 cf       	rjmp	.-180    	; 0x9f2 <__fp_szero>
 aa6:	5f 3f       	cpi	r21, 0xFF	; 255
 aa8:	ec f3       	brlt	.-6      	; 0xaa4 <__mulsf3_pse+0x82>
 aaa:	98 3e       	cpi	r25, 0xE8	; 232
 aac:	dc f3       	brlt	.-10     	; 0xaa4 <__mulsf3_pse+0x82>
 aae:	86 95       	lsr	r24
 ab0:	77 95       	ror	r23
 ab2:	67 95       	ror	r22
 ab4:	b7 95       	ror	r27
 ab6:	f7 95       	ror	r31
 ab8:	e7 95       	ror	r30
 aba:	9f 5f       	subi	r25, 0xFF	; 255
 abc:	c1 f7       	brne	.-16     	; 0xaae <__mulsf3_pse+0x8c>
 abe:	fe 2b       	or	r31, r30
 ac0:	88 0f       	add	r24, r24
 ac2:	91 1d       	adc	r25, r1
 ac4:	96 95       	lsr	r25
 ac6:	87 95       	ror	r24
 ac8:	97 f9       	bld	r25, 7
 aca:	08 95       	ret

00000acc <_exit>:
 acc:	f8 94       	cli

00000ace <__stop_program>:
 ace:	ff cf       	rjmp	.-2      	; 0xace <__stop_program>
